namespace ProjectEuler {

    class PE008 : PESolution {

        void PESolution.printProblemNumber() {
            System.Console.WriteLine("Problem 8:");
        }

        void PESolution.printProblemStatement() {
            System.Console.WriteLine("The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.");
            System.Console.WriteLine("73167176531330624919225119674426574742355349194934");
            System.Console.WriteLine("96983520312774506326239578318016984801869478851843");
            System.Console.WriteLine("85861560789112949495459501737958331952853208805511");
            System.Console.WriteLine("12540698747158523863050715693290963295227443043557");
            System.Console.WriteLine("66896648950445244523161731856403098711121722383113");
            System.Console.WriteLine("62229893423380308135336276614282806444486645238749");
            System.Console.WriteLine("30358907296290491560440772390713810515859307960866");
            System.Console.WriteLine("70172427121883998797908792274921901699720888093776");
            System.Console.WriteLine("65727333001053367881220235421809751254540594752243");
            System.Console.WriteLine("52584907711670556013604839586446706324415722155397");
            System.Console.WriteLine("53697817977846174064955149290862569321978468622482");
            System.Console.WriteLine("83972241375657056057490261407972968652414535100474");
            System.Console.WriteLine("82166370484403199890008895243450658541227588666881");
            System.Console.WriteLine("16427171479924442928230863465674813919123162824586");
            System.Console.WriteLine("17866458359124566529476545682848912883142607690042");
            System.Console.WriteLine("24219022671055626321111109370544217506941658960408");
            System.Console.WriteLine("07198403850962455444362981230987879927244284909188");
            System.Console.WriteLine("84580156166097919133875499200524063689912560717606");
            System.Console.WriteLine("05886116467109405077541002256983155200055935729725");
            System.Console.WriteLine("71636269561882670428252483600823257530420752963450");
            System.Console.WriteLine("Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?");
        }

        void PESolution.solve() {
            char[] NUMBERS = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450".ToCharArray();
            int adjacentRange = 13;
            long largestProduct = 0;
            for (int i = 0; i <= NUMBERS.Length - adjacentRange; i++) {
                long product = 1;
                for (int j = i; j < i + adjacentRange; j++) {
                    product *= System.Convert.ToByte(char.GetNumericValue(NUMBERS[j]));
                }
                if (product > largestProduct) {
                    largestProduct = product;
                }
            }
            
            System.Console.WriteLine("Answer is {0}", largestProduct);
        }

    }

}
